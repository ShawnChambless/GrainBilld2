angular.module('GrainBilld', ['ui.router', 'angular-loading-bar'])
.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

    $urlRouterProvider.otherwise('/login');
    $stateProvider
        .state('login', {
            url: '/login',
            controller: 'loginCtrl',
            templateUrl: 'app/login/loginTmpl.html'
        })
        .state('home', {
            url: '/home',
            controller: 'homeCtrl',
            templateUrl: 'app/home/homeTmpl.html',
            resolve: {
                getGrain: ["homeService", function(homeService) {
                    return homeService.getGrain().then(function(resp) {
                        return {grain: resp.data};
                    });
                }],
                getHops: ["homeService", function(homeService) {
                    return homeService.getHops().then(function(resp) {
                        return {hops: resp.data};
                    });
                }],
                getYeast: ["homeService", function(homeService) {
                    return homeService.getYeast().then(function(resp) {
                        return {yeast: resp.data};
                    });
                }]
            }
        })
        .state('new-batch', {
            url: '/NewBatch',
            controller: 'newBatchController',
            templateUrl: 'app/newBatch/newBatchTmpl.html',
            resolve: {
                getGrain: ["homeService", function(homeService) {
                    return homeService.getGrain().then(function(resp) {
                        return resp.data;
                    });
                }],
                getHops: ["homeService", function(homeService) {
                    return homeService.getHops().then(function(resp) {
                        return resp.data;
                    });
                }],
                getYeast: ["homeService", function(homeService) {
                    return homeService.getYeast().then(function(resp) {
                        return resp.data;
                    });
                }]
            }
        })
        .state('ingredientInfo', {
            url: '/IngredientInfo',
            controller: 'ingredientInfoController',
            templateUrl: 'app/ingredientInfo/ingredientInfoTmpl.html'
        })
        .state('myRecipes', {
            url: '/MyRecipes',
            controller: 'myRecipesController',
            templateUrl: 'app/myRecipes/myRecipesTmpl.html'
        })
        .state('communityRecipes', {
            url: '/CommunityRecipes',
            controller: 'communityRecipesController',
            templateUrl: 'app/CommunityRecipes/communityRecipesTmpl.html'
        });
}]);

$(document).ready(function() {
  var menuToggle = $('#js-mobile-menu').unbind();
  $('#js-navigation-menu').removeClass("show");

  menuToggle.on('click', function(e) {
    e.preventDefault();
    $('#js-navigation-menu').slideToggle(function(){
      if($('#js-navigation-menu').is(':hidden')) {
        $('#js-navigation-menu').removeAttr('style');
      }
    });
  });
});

angular.module('GrainBilld')
.controller('communityRecipesController', ["$scope", "communityRecipesService", function($scope, communityRecipesService) {

}]);

angular.module('GrainBilld')
.service('communityRecipesService', ["$http", function($http) {

}]);

angular.module('GrainBilld')
.controller('homeCtrl', ["$scope", "homeService", "getGrain", "getHops", "getYeast", function($scope, homeService, getGrain, getHops, getYeast) {
    $scope.grain    = getGrain.grain;
    $scope.hops     = getHops.hops;
    $scope.yeast    = getYeast.yeast;
}]);

angular.module('GrainBilld')
.service('homeService', ["$http", "$q", function($http, $q) {

    this.getGrain = function() {
        return $http({
            method: 'GET',
            url:    'http://localhost:8080/api/database/ingredients/grain'
        });
    };
    this.getHops = function() {
        return $http({
            method: 'GET',
            url:    'http://localhost:8080/api/database/ingredients/hops'
        });
    };

    this.getYeast = function() {
        return $http({
            method: 'GET',
            url:    'http://localhost:8080/api/database/ingredients/yeast'
        });
    };

}]);

angular.module('GrainBilld')
.controller('ingredientInfoController', ["$scope", "ingredientInfoService", function($scope, ingredientInfoService) {

}]);

angular.module('GrainBilld')
.service('ingredientInfoService', ["$http", function($http) {

}]);

angular.module('GrainBilld')
.controller('loginCtrl', ["$scope", "loginService", "$state", function($scope, loginService, $state) {
    $scope.showLogin    = true;
    $scope.showRegister = false;
    $scope.register = function(firstName, lastName, email, password) {
        loginService.register(firstName, lastName, email, password).then(function(resp) {
            $scope.showSuccess = true;
            $state.go('home');
        }).catch(function(err) {
            $scope.showError = true;
            $state.go('login');
        });
    };
    $scope.login = function(email, password) {
        loginService.login(email, password).then(function(resp) {
            $scope.showSuccess = true;
            $state.go('home');
            $scope.email = '';
            $scope.password = '';
            $scope.showError = false;
        }).catch(function(err) {
            $scope.showError = true;
            console.log(err);
            $state.go('login');
        });
    };

    $scope.getCurrentUser = function(userId) {
        loginService.getCurrentUser().then(function(resp) {
            if(currUser === user);
            $state.go('home');
        }).catch(function(err) {
            console.log(err);
        });
    };
}]);

angular.module('GrainBilld')
.service('loginService', ["$http", "$q", function($http, $q) {
    var currUser = null;
    this.currentUser = function(){ return currUser; };

    this.getCurrentUser = function() {
        var dfd = $q.defer();
        $http({
            method: 'GET',
            url:    'http://localhost:8080/api/user/'
        }).success(function(user) {
            currUser = user;
            dfd.resolve(user);
        }).error(function(err) {
            dfd.reject(err);
        });
        return dfd.promise;
    };

    this.register = function(firstName, lastName, email, password) {
        var dfd = $q.defer();
        $http({
            method: 'POST',
            url:    'http://localhost:8080/auth/local/signup',
            data: {
                firstName:  firstName,
                lastName:   lastName,
                email:      email,
                password:   password
            }
        }).then(function(resp) {
            dfd.resolve(resp.data);
        }, function(err) {
            dfd.reject(err);
        });
        return dfd.promise;
    };

    this.login = function(email, password) {
        var dfd = $q.defer();
        $http({
            method: 'POST',
            url: 'http://localhost:8080/auth/local/login',
            data: {
                email:      email,
                password:   password
            }
        }).then(function(resp) {
            currUser = resp.data;
            dfd.resolve(resp.data);
        }, function(err) {
            dfd.reject(err);
        });
        return dfd.promise;
    };
}]);

angular.module('GrainBilld')
.controller('myRecipesController', ["$scope", "myRecipesService", function($scope, myRecipesService) {

}]);

angular.module('GrainBilld')
.service('myRecipesService', ["$http", function($http) {

}]);

angular.module('GrainBilld')
.directive('editRecipe', ["newBatchService", function(newBatchService) {
    return {
        scope: {
            ingredient: '=',
            ingredientType: '='
        },
        template: '<p>{{ingredient.name}}</p>',
        link: function(scope, elem, attrs) {
            elem.on('click', function() {
                newBatchService.addIngredient(scope.ingredientType, scope.ingredient);
                scope.$apply(scope.grainInRecipe);
            });
        }
    };
}]);

angular.module('GrainBilld')
.controller('newBatchController', ["$scope", "newBatchService", "getGrain", "getHops", "getYeast", function($scope, newBatchService, getGrain, getHops, getYeast) {

    $scope.grainInDb        = getGrain;
    $scope.hopsInDb         = getHops;
    $scope.yeastInDb        = getYeast;
    $scope.grainInRecipe    = newBatchService.grainInRecipe;
    $scope.hopsInRecipe     = newBatchService.hopsInRecipe;
    $scope.yeastInRecipe    = newBatchService.yeastInRecipe;
    $scope.grains           = 'grain';
    $scope.hopss            = 'hops';
    $scope.yeasts           = 'yeast';

    $scope.showGrainData = function() {
        $scope.showGrain    = true;
        $scope.showHops     = false;
        $scope.showYeast    = false;
    };

    $scope.showHopsData = function() {
        $scope.showGrain  = false;
        $scope.showHops   = true;
        $scope.showYeast  = false;
    };

    $scope.showYeastData = function() {
        $scope.showGrain    = false;
        $scope.showHops     = false;
        $scope.showYeast    = true;
    };

    $scope.removeGrain = function(index) {
        newBatchService.grainInRecipe.splice(index, 1);
    };

    $scope.removeHops = function(index) {
        newBatchService.hopsInRecipe.splice(index, 1);
    };

    $scope.removeYeast = function(index) {
        newBatchService.yeastInRecipe.splice(index, 1);
    };

}]);

angular.module('GrainBilld')
.service('newBatchService', function() {
    var recipeStats   = [{og: 0}];
    this.grainInRecipe = [];
    this.hopsInRecipe  = [];
    this.yeastInRecipe = [];


    this.addIngredient = function(ingredientType, ingredient) {
        addIngredient(ingredientType, ingredient);
        console.log(this.grainInRecipe);
    };

    var addGrainToRecipe = function(grain, calcOg, calcSRM) {
        this.grainInRecipe.push({grain: grain, amount: 10, batchSize: 10});
        var OG = calcOg(grain);
        var SRM = calcSRM(grain);
        return OG(), SRM(), this.grainInRecipe;
    }.bind(this);

    var calculateOGOfRecipe = function(grain) {
        var og = 1.000, gpOfGrain = 0, itemToAdd = 0, batchSize = 10, amount = 10, sg = parseFloat(grain.sg);
        return function() {
            if (!itemToAdd) {
                itemToAdd = ((sg - 1)*1000 * amount);
                gpOfGrain = itemToAdd;
            } else {
                gpOfGrain = (itemToAdd + ((sg - 1)*1000) * amount);
                itemToAdd = gpOfGrain;
            }
            og = ((gpOfGrain * 0.75 / batchSize)/1000 + 1).toFixed(3);
            recipeStats.find(function(ele) { ele.og += parseFloat(og); });
            console.log(recipeStats[0].og);
            return og;
        };
    }.bind(this);

    var calculateSRMOfRecipe = function(grain) {
        var recipeSrm = 0, MCU = 0, amount = 10, batchSize = 10, lovibond = parseFloat(grain.lovibond);
        return function() {
            MCU = ((lovibond * amount)/batchSize);
            recipeSrm += (1.4922*(Math.pow(MCU, 0.6859))).toFixed(1);
            return recipeSrm;
        };

    };

    function addIngredient(ingredientType, ingredient) {
        switch(ingredientType) {
            case 'grain':
                addGrainToRecipe(ingredient, calculateOGOfRecipe, calculateSRMOfRecipe);
                break;
            case 'hops':
                addHopsToRecipe(ingredient);
                break;
            case 'yeast':
                addYeastToRecipe(ingredient);
                break;
        }
    }

});
